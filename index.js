const mineflayer = require('mineflayer');
const express = require('express');

const app = express();
const PORT = process.env.PORT || 3000;

// –ü–∏–Ω–≥-endpoint –¥–ª—è Render
app.get('/ping', (req, res) => {
  res.send('UPTBeacon is alive! üòé');
});
app.listen(PORT, () => {
  console.log(`üåê –°–µ—Ä–≤–µ—Ä –ø–∏–Ω–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let bot = null;

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
function createBot() {
  const newBot = mineflayer.createBot({
    host: '6i9b.sdlf.fun',
    port: 25565,
    username: 'UPTBeacon',
    version: '1.20.1'
  });

  newBot.on('spawn', () => startBotActions(newBot));
  newBot.on('end', reconnectBot);
  newBot.on('message', (message) => handleBotMessage(newBot, message));

  return newBot;
}

// –ó–∞–ø—É—Å–∫ –¥–µ–π—Å—Ç–≤–∏–π –±–æ—Ç–∞
function startBotActions(bot) {
  console.log('‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∏ –∂–∏–≤—ë—Ç —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é');
  console.log('üìç –ü–æ–∑–∏—Ü–∏—è: ' + JSON.stringify(bot.entity.position));

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  setTimeout(() => {
    bot.chat('/l dfm44-55');
    console.log('üîë –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /l dfm44-55');
  }, 2000);

  // –¶–∏–∫–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  setInterval(() => {
    const action = Math.random();
    if (action < 0.3) {
      bot.setControlState('jump', true);
      setTimeout(() => {
        bot.setControlState('jump', false);
        console.log('‚¨ÜÔ∏è –ë–æ—Ç –ø—Ä—ã–≥–Ω—É–ª');
      }, 600);
    } else if (action < 0.7) {
      const move = ['forward', 'back', 'left', 'right'][Math.floor(Math.random() * 4)];
      bot.setControlState(move, true);
      setTimeout(() => {
        bot.setControlState(move, false);
        console.log('üö∂ –ë–æ—Ç –¥–≤–∏–Ω—É–ª—Å—è: ' + move);
      }, 500 + Math.random() * 500);
    } else {
      bot.swingArm();
      console.log('üëä –ë–æ—Ç –º–∞—Ö–Ω—É–ª —Ä—É–∫–æ–π');
    }
  }, Math.floor(Math.random() * 5000) + 5000);

  // –ö–∞–º–µ—Ä–∞
  setInterval(() => {
    const yaw = bot.entity.yaw + (Math.random() - 0.5) * 0.3;
    const pitch = Math.max(-0.8, Math.min(0.8, bot.entity.pitch + (Math.random() - 0.5) * 0.2));
    bot.look(yaw, pitch, true);
    console.log('üëÄ –ë–æ—Ç –ø–æ–≤–µ—Ä–Ω—É–ª –≥–æ–ª–æ–≤—É: yaw=' + yaw.toFixed(2) + ', pitch=' + pitch.toFixed(2));
  }, Math.floor(Math.random() * 6000) + 6000);

  // –ü–∞—É–∑—ã
  setInterval(() => {
    bot.clearControlStates();
    console.log('‚è∏Ô∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è');
  }, Math.floor(Math.random() * 15000) + 15000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
function handleBotMessage(bot, message) {
  const text = message.toString();
  if (text.includes('Incorrect password') || text.includes('Login timeout')) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞, –ø–æ–≤—Ç–æ—Ä—è–µ–º /l dfm44-55');
    setTimeout(() => bot.chat('/l dfm44-55'), 2000);
  }
}

// –†–µ–∫–æ–Ω–Ω–µ–∫—Ç
function reconnectBot() {
  console.log('üîå –ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è...');
  setTimeout(() => {
    try {
      bot.quit();
    } catch (e) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞');
    }
    bot = createBot();
  }, 5000);
}

// –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
bot = createBot();
